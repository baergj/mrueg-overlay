# Copyright 1999-2015 Gentoo Foundation.
# Distributed under the terms of the GNU General Public License v2
# $Header: $

# This file contains descriptions of PROSODY_MODULES USE_EXPAND flags.

# Keep it sorted.
addressing - This module is a partial implementation of XEP-0033: Extended Stanza Addressing.
adhoc_account_management - This module adds an ad-hoc command that lets an user change their password.  This is useful for clients that don't have support for XEP-0077 style password changing.  In the future, it may provide other account management commands.
adhoc_blacklist - Provides the Edit Blacklist command described in XEP-0133 and uses this to block s2s connections
admin_blocklist - Prevents s2s connections to/from domains blocked by a local admin using mod_blocklist (0.10+) 
admin_message - This module provides a console over XMPP. All the commands of the mod_admin_telnet module are available from an XMPP client.
admin_probe - Module allowing server administrators to probe any user.
admin_web - This module provides a basic web administration interface. It currently gives you access to Ad-Hoc commands on any virtual host or component that you are set as an administrator for in the Prosody config file. It also provides a live list of all S2S and C2S connections.
auth_any - This module accepts any username and password, which can be useful for testing.
auth_ccert - This module implements PKI-style client certificate authentication. You will therefore need your own Certificate Authority. How to set that up is beyond the current scope of this document.
auth_custom_http - No module description on upstream wiki yet.
auth_dovecot - This is a Prosody authentication plugin which uses Dovecot as the backend.
auth_external - Allow client authentication to be handled by an external script/process.
auth_ha1 - This module authenticates users against hashed credentials stored in a plain text file. The format is the same as that used by reTurnServer.
auth_http_async - Async HTTP auth module.
auth_imap -  IMAP authentication module.
auth_internal_yubikey -  Two-factor authentication using Yubikeys.
auth_joomla - This module allows you to authenticate against an Joomla database.
auth_ldap - This is a Prosody authentication plugin which uses LDAP as the backend.
auth_ldap2 - See prosody_modules_lib_ldap for more information.
auth_pam - This module makes Prosody authenticate users against PAM (Linux Pluggable Authentication Modules)
auth_phpbb3 - This module allows you to authenticate against an PHPBB3 database.
auth_sql - Allow client authentication to be handled by an SQL database query.
auth_wordpress - This module allows you to authenticate against an Wordpress database.
auto_accept_subscriptions - In some environments where all users on the system have mutual trust in each other, it's sometimes fine to skip the usual authorization process to add someone to your contact list and see their status.
auto_activate_hosts - By default Prosody does not automatically activate/deactivate hosts when they are added to and removed from the configuration.
benchmark_storage - A storage benchmark run through prosodyctl
bidi - This module implements XEP-0288: Bidirectional Server-to-Server Connections. It allows servers to use a single connection for sending stanzas to each other, instead of two connections (one for stanzas in each direction).
blocking - Privacy lists are a widely implemented protocol for instructing your server on blocking communications with selected users and services.
block_registrations - On a server with public registration it is usually desirable to prevent registration of certain "reserved" accounts, such as "admin".
block_s2s_subscriptions - Module to block incoming presence subscriptions from non-contacts on selected remote hosts.
block_strangers - Module to block message and iqs from people not on your roster.
block_subscribes - Block inbound and outbound subscription requests (useful to prevent implicit roster modification).
block_subscriptions - Block incoming and outgoing presence subscriptions (useful in conjunction with mod_readonly).
broadcast - This module largely duplicates the functionality of the standard mod_announce that is included with Prosody. It was developed for compatibility with some clients (e.g. iChat) that do not support ad-hoc commands or sending to JIDs with the format 'example.com/announce/online'.
c2s_conn_throttle - This module allows to throttle those client connections which exceed a n*seconds limit.
c2s_limit_sessions - This module lets you limit number of resources a user may connect.
candy - This is a very simple demo module showing how to serve a BOSH-using web app from prosody.
captcha_registration - Prosody-captcha is a little modification of prosody's mod_register.lua module that provides captcha protection for registration form.
carbons - This module implements XEP-0280: Message Carbons, allowing users to maintain a shared and synchronized view of all conversations across all their online clients and devices.
carbons_adhoc - This module will add an Adhoc-command by which a user can see if Message Carbons (XEP-0280) are generated for his clients and also which version is used for the individual client. Clients which receive copies as per mod_carbons_copies will be listed as Version 0 carbons.
carbons_copies - Enable v0 style carbons for clients which are not carbons-capable yet. This will not interfere with clients which have support for regular Message Carbons (XEP-0280).
checkcerts - This module periodically checks your certificate to see if it is about to expire soon.  The time before expiry is printed in the logs.  About a week before a certificate expires, reminder messages will be sent to admins.
cloud_notify - XEP-0357: Cloud push notifications
client_certs - XEP-0257 specifies a protocol for clients to store and manage client side certificates. When a client presents a stored client side certificate during the TLS handshake, it can log in without supplying a password (using SASL EXTERNAL). This makes it possible to have multiple devices accessing an account, without any of them needing to know the password, and makes it easier to revoke access for a single device.
compact_resource - Enforces short random resources
compat_bind - Compatibility with clients that set 'to' on resource bind requests.
compat_muc_admin - Compat module for old clients using wrong namespaces in MUC's affiliation manipulations. 
compat_vcard - Compatibility with clients and servers (i.e. ejabberd) that send vcard requests to the full JID.
component_client - This module turns Prosody hosts into components of other XMPP servers.
component_roundrobin - This module enables multiple instances of external components to connect at the same time, and does round-robin load-balancing of incoming stanzas.
conformance_restricted - This module sends processing instructions, comments, DTDs and a non predefined entity (defined by the DTD) to the requesting entity.
couchdb - This is an experimental Prosody backend for CouchDB.
csi - This module implements Client State Indication, a way for mobile clients  to tell the server that they are sitting in someones pocket and would  rather not get some less urgent things pushed to it.
csi_compat - This module implements the google:queue protocol and maps it to prosody_modules_csi events.
data_access - This module gives HTTP access to prosodyâ€™s storage mechanism. It uses normal HTTP verbs and Basic HTTP authentication, so you could call it RESTful if you like buzzwords.
default_bookmarks - This module allows you to add default bookmarks for users. It only kicks in when the user has no existing bookmarks, so users are free to add, change or remove them.
default_vcard - It is possible for the user to supply more than just a username and password when creating an account using prosody_modules_register. This module automatically copies over that data to the user's vcard.
delegation - XEP-0355 Namespace Delegation
disable_tls - This module can be used to prevent Prosody from offering TLS on client ports that you specify. This can be useful to work around buggy clients when transport security is not required.
discoitems - This Prosody plugin lets you manually override the service discovery items for a host.
dwd - This module implements an optimization of the Dialback protocol, by skipping the dialback step for servers presenting a valid certificate.
email_pass - This module aims to help in the procedure of user password restoration. To start the restoration, the user must go to an URL provided by this module, fill the JID and email and submit the request.
extdisco - XEP-0215: External Service Discovery
filter_chatstates - Removes chat states from messages to inactive (per CSI) sessions.
firewall - A firewall is an invaluable tool in the sysadmin's toolbox. However while low-level firewalls such as iptables and pf are incredibly good at what they do, they are generally not able to handle application-layer rules.
flash_policy - This Prosody plugin adds support for flash socket policies. When connecting with a flash client (from a webpage, not an exe) to prosody the flash client requests for an xml "file" on port 584 or the connecting port (5222 in the case of default xmpp). Responding on port 584 is tricky because it requires root priviliges to set up a socket on a port smaller than 1024.
group_bookmarks -mod_groups allows you to insert contacts into users' contact lists. Well mod_group_bookmarks allows you to insert chatrooms into the user's bookmarks. These are fetched by their client and automatically joined when the log in.
host_blacklist - Similar to mod_s2s_blacklist, but stanza-based. Works between hosts on the same server, at a slight performance impact. 
host_guard - Block or restrict by blacklist remote access to local components or hosts.
http_altconnect - XEP-0156: Discovering Alternative XMPP Connection Methods.
http_dir_listing - This module generates directory listings when invoked by prosody_modules_http_files.
http_favicon - This simple module serves a favicon.ico from prosodys HTTP server and nothing else.
http_index - Generates an index of local HTTP apps.
http_muc_log - This module provides a built-in web interface to view chatroom logs stored by prosody_modules_mam_muc.
http_user_count - HTTP module to report the current number of online users or sessions.
idlecompat - This module adds XEP-0319 idle tags to presence stanzas containing XEP-0012: Last Activity tags for idle indication (e.g. supported by libpurple clients). It works on outgoing and incoming presence stanzas.
incidents_handling - This module implements XEP-0268: Incident reporting among XMPP server deployments.
inotify_reload - Reloads modules when their files change.
ipcheck - Sometimes for various reasons a client might want to know its IP address as it appears to the server. XEP-0279 allows the client to ask the server for the IP address it is connected from.
isolate_host - In some environments it is desirable to isolate one or more hosts, and prevent communication with external, or even other internal domains.
jid_prep - This is a plugin that implements the JID prep protocol.
json_streams - This plugin encodes XMPP as JSON. This is an implementation of XEP-0295: JSON Encodings for XMPP.
lastlog - Simple module that stores the timestamp of when a user logs in.
latex - This module intercepts messages between users and into chatrooms, and attaches a links to a rendered version of any LaTeX in the message. This requires client support for XEP-0070: XHTML-IM, and fetching images via HTTP.
lib_ldap - This module is used by other modules to access an LDAP server.  It's pretty useless on its own; you should use it if you want to write your own LDAP-related module, or if you want to use prosody_modules_auth_ldap2 or prosody_modules_storage_ldap.
limit_auth - Throttle authentication (failed) attempts with optional (0.10+) tarpit.
limits - On some servers, especially public ones, it is desired to make sure that everyone gets their fair share of system resources (and no more).
list_inactive - Parse data collected by prosody_modules_lastlog and print users who have not logged in for some time .
listusers - No module description on upstream wiki yet.
log_auth - Prosody doesn't write IP addresses to its log file by default for privacy reasons (unless debug logging is enabled).
log_events - Module to log all events on the server/host.
log_messages_sql - Fork of prosody_modules_mam_sql without the protocol bits.
log_rate - Log sink that reports the rate of log messages to statsmanager 
log_sasl_mech - Logs authentication mechanism used.
log_slow_events - Log events that take a long time to process (including stanzas) 
mam - Implementation of XEP-0313: Message Archive Management.
mam_adhoc - This module complements mod_mam by allowing clients to change archiving preferences through an Ad-hoc command.
mam_archive - Implementation of XEP-0136: Message Archiving for prosody_modules_mam.
mam_muc - This module logs the conversation of chatrooms running on the server to Prosody's archive storage. To access them you will need a client with support for XEP-0313: Message Archive Management or a module such as prosody_modules_http_muc_log.
mam_muc_sql - SQL variant of prosody_modules_mam_muc.
mam_sql - Implementation of (an older version of) XEP-0313: Message Archive Management backed by a SQL database. Like prosody_modules_mam, but using SQL.
mamsub - Experimental implementation of MAM subscriptions
manifesto - This module informs users about the XMPP Test day and whether their contacts are affected.
measure_cpu - Collect CPU usage statistic
measure_memory - Module for polling memory useage from Lua, meminfo() and /proc depending on availability.
message_logging - Often service administrators need to log their users' messages for reasons such as auditing and compliance. This module simply logs user messages to simple text files, which can be easily searched, archived or removed on a regular basis.
migrate - Provides a prosodyctl command for copying data between storage backends
motd_sequential - A variant of prosody_modules_motd that lets you specify a sequence of MOTD messages instead of a single static one.  Each message is only sent once and the module keeps track of who as seen which message.
muc_ban_ip - One frequent complaint about XMPP chatrooms (MUCs) compared to IRC is the inability for a room admin to ban a user based on their IP address. This is because an XMPP user is not identified on the network by their IP address, only their JID.
muc_config_restrict - Sometimes, especially on public services, you may want to allow people to create their own rooms, but prevent some options from being modified by normal users.
muc_intercom - Relay messages between rooms.
muc_limits - This module allows you to control the maximum rate of 'events' in a MUC room. This makes it useful to prevent room floods (whether malicious or accidental).
muc_log - This module logs the conversation of chatrooms running on the server to Prosody's data store. To view them you will need a module such as prosody_modules_muc_log_http.
muc_log_http - This module provides a built-in web interface to view chatroom logs stored by prosody_modules_muc_log.
muc_restrict_rooms - This module allows disabling room creation based on regexp patterns defined in configuration. 
munin - Implementation of the Munin collection protocol.
net_dovecotauth - A server implementation of the Dovecot authentication protocol. It allows you to authenticate eg Postfix against your Prosody installation.
offline_email - Forward offline messages via email.
onhold - Enable mod_onhold to allow temporarily placing messages from particular JIDs "on hold" -- i.e. store them, but do not deliver them until the hold status is taken away.
onions - This plugin allows Prosody to connect to other servers that are running as a Tor hidden service. Running Prosody on a hidden service works without this module, this module is only necessary to allow Prosody to federate to hidden XMPP servers.
openid - OpenID is an decentralized authentication mechanism for the Web.  mod_openid turns Prosody into an OpenID provider, allowing users to use their Prosody credentials to authenticate with various third party websites.
password_policy - Password policy enforcement for Prosody.
pastebin - Pastebins are used very often in IM, especially in chat rooms. You have a long log or command output which you need to send to someone over IM, and don't want to fill their message window with it. Put it on a pastebin site, and give them the URL instead, simple.
pep_vcard_avatar - Syncs avatars between PEP and vCard.
post_msg - Sometimes it's useful to have different interfaces to access XMPP.
privacy_lists - Privacy lists are a flexible method for blocking communications.
private_adhoc - This is a very simple module which implements an adhoc commant toretrieves the users private XML data.
privilege - XEP-0356 (Privileged Entity)
proctitle - Changes the process name to 'prosody' rather than 'lua'/'lua5.1'
profile - This module provides a replacement for mod_vcard.  In addition to the ageing protocol defined by XEP-0054, it also supports the XEP-0292: new vCard 4 based protocol and integrates with XEP-0163: Personal Eventing Protocol. The vCard 4, XEP-0084: User Avatar and XEP-0172: User Nickname PEP nodes are updated when the vCard is changed.
proxy65_whitelist -  	Limit which file transfer users can use.
pubsub_eventsource - Server-Sent Events is a simple HTTP/line-based protocol supported in HTML5, making it easy to receive a stream of "events" in realtime using the Javascript EventSource API.
pubsub_feeds - This module allows Prosody to fetch Atom and RSS feeds for you, and push new results to subscribers over XMPP.
pubsub_github - This module accepts Github web hooks and publishes them to a local pubsub component for XMPP clients to subscribe to.
pubsub_googlecode - Module to receive post-commit webhook requests from Google Code Hosting.
pubsub_hub - This module implements a PubSubHubbub (PuSH) hub, allowing PuSH clients to subscribe to local XMPP Publish-Subscribe XEP-0060 nodes stored by prosody_modules_pubsub.
pubsub_mqtt - MQTT is a lightweight binary pubsub protocol suited to embedded devices. This module provides a way for MQTT clients to connect to Prosody and publish or subscribe to local pubsub nodes.
pubsub_pivotaltracker - Accept activity notifications from Pivotal Tracker web hooks and relay them to a pubsub node.
pubsub_post - Module to publish to pubsub nodes from a simple HTTP POST.
pubsub_twitter - Twitter has an open 'realtime' search API, but it requires polling (within their rate limits). This module allows Prosody to poll for you, and push new results to subscribers over XMPP.
query_client_ver - Query and log client software.
rawdebug - No module description on upstream wiki yet.
readonly - Allow preventing direct modification of certain user data via XMPP.
register_json - This module let's you activate a httpserver interface to handle data from webforms with POST and Base64 encoded JSON.
register_redirect - Registration Redirect as explained in the XEP-0077: IBR XEP.
register_web - There are various reasons to prefer web registration instead of "in-band" account registration over XMPP. For example the lack of CAPTCHA support in clients and servers.
reload_modules - By default Prosody does not reload modules at runtime unless instructed to via one of its admin interfaces. However sometimes you want to easily reload a module to apply new settings when the config changes.
remote_roster - No module description on upstream wiki yet.
require_otr - OTR, "Off The Record", encryption allows clients to encrypt messages such that the server cannot read/modify them.
roster_allinall - This module is similar in purpouse to mod_groups, for when you want all users on the server to be in each others roster.  
roster_command - This module allows you to perform various actions on user rosters via prosodyctl.
s2s_auth_compat - This module is a workaround for servers that try to do s2s authentication with certificates and SASL EXTERNAL, but do not send correct stream headers.  Notably Openfire versions since 3.7 or 3.8.
s2s_auth_dane - This module implements DANE using DNS Security Extensions (DNSSEC) and DNS-based Authentication of Named Entities (DANE) as a Prooftype for XMPP Domain Name Associations.
s2s_auth_fingerprint - This module allows you to manually pin certificate fingerprints of remote servers.
s2s_auth_monkeysphere - Monkeysphere is a project aiming to introduce PGP's web of trust to protocols such as SSH and TLS (which XMPP uses).
s2s_blacklist - A new _simple_ s2s blacklist module.
s2s_idle_timeout - Some people find it preferable to close server-to-server connections after they have been silent for a while.
s2s_keepalive - Poke s2s connections with pings and whitespace.
s2s_keysize_policy - No module description on upstream wiki yet.
s2s_log_certs - This module produces info level log messages with the certificate status and fingerprint every time an s2s connection is established.  It can also optionally store this in persistant storage.
s2s_never_encrypt_blacklist - Filter out servers which gets choppy and buggy when it comes to starttls.
s2soutinjection - Variant of prosody_modules_srvinjection using 0.9+ APIs.
s2s_reload_newcomponent - Currently, module:reload command in console doesn't load new components. This module will automatically load the new components (if any) when the config:reload command is run in the console.
s2s_whitelist - The opposite of mod_s2s_blacklist.
saslauth_muc - Implements SASL auth for MUC rooms.
saslname - This module implements XEP-0233: Domain-Based Service Names in XMPP SASL Negotiation.
seclabels - This module implements XEP-0258: Security Labels in XMPP.
secure_interfaces - Sometimes you might run clients without encryption on the same machine or LAN as Prosody - and you want Prosody to treat them as secure (e.g. allowing plaintext authentication) even though they are not encrypted.
server_contact_info - This module implements XEP-0157: Contact Addresses for XMPP Services.
server_status - This module fetches the current status of configured hosts and/or stanza statistics from prosody_modules_stanza_counter. And outputs it in either XML or JSON format.
service_directories - XEP-0309: Service Directories.
sift - SIFT is a technology to allow clients to filter incoming traffic on the server. This helps save bandwidth, etc.
smacks - By default XMPP is as reliable as your network is. Unfortunately in some cases that is not very reliable - in some network conditions disconnects can be frequent and message loss can occur.
sms_clickatell - This module provides and SMS gateway component which uses the Clickatell HTTP API to deliver text messages. See clickatell.com for details on their services. Note that at present, this is entirely one way: replies will either go nowhere or as sms to the source number you specify.
srvinjection - This Prosody plugin lets you manually override SRV records used for a remote host.
sslv3_warn - Notice users connected with SSLv3 that they need to upgrade becasue SSLv3 is insecure.
stanza_counter - This module counts incoming and outgoing stanzas from when the instance started, and makes the data available to other modules by creating a global prosody. object
statistics - No module description on upstream wiki yet.
statistics_auth - Collects statistics on number of successful or failed authentication attempts.
statistics_cputotal - Module that collects accumulated CPU usage statistics.
statistics_mem - Module that collects memory usage stats from /proc.
statistics_statsd - Module for pushing from util.statistics (0.10) to statsd.
statsd - Log common stats to statsd.
storage_gdbm - Storage backend based on lgdbm.
storage_ldap - See prosody_modules_lib_ldap for more information.
storage_lmdb - Storage module using Lightning Memory-Mapped Database 
storage_memory - This module acts as a normal storage module for Prosody, but saves all data in memory only. All data is lost when the server stops. This makes it useful for testing, or certain specialized applications.
storage_mongodb - This is a storage backend that uses MongoDB. Depends on luamongo bindings.
storage_muc_log - prosody_modules_muc_log provided logging of chatrooms running on the server to Prosody's data store. This module gives access to this data using the 0.10+ stanza archive API, allowing legacy log data to be used with prosody_modules_mam_muc and prosody_modules_http_muc_log.
storage_multi - Multi-backend storage module.
storage_xmlarchive - New stanza archive-only storage module backed by plain text files
streamstats - Streams live stats from Prosody over a TCP stream.
strict_https - This module implements HTTP Strict Transport Security and responds to all non-HTTPS requests with a 301 Moved Permanently redirect to the HTTPS equivalent of the path.
support_contact - This Prosody plugin adds a default contact to newly registered accounts.
swedishchef - This module does some conversions on message bodys passed through it causing them to look like our beloved swedish chef had typed them.
tcpproxy - It happens occasionally that I would like to use the XMPP server as a generic proxy for connecting to another service. It is especially awkward in some environments, and impossible in (for example) Javascript inside a web browser.
telnet_tlsinfo - This module adds two commands to the telnet console, c2s:showtls() and s2s:showtls().  These commands shows TLS parameters, such as ciphers and key agreement protocols, of all c2s or s2s connections.
throttle_presence - For most people 'presence' (status changes) of contacts make up most of the traffic received by their client. However much of the time it is not essential to have highly accurate presence information.
tls_policy - Enforce per-host TLS parameter policies.
turncredentials - XEP-0215 implementation for time-limited turn credentials.
twitter - Twitter has simple API to use, so I tried to deal with it via Prosody. I didn't manage to finish this module, but it is nice example of component that accepts registrations, unregistrations, does HTTP polling and so on. Maybe someone will finnish this idea.
uptime_presence - Indicates uptime by replying to probes with delay-stamped presence.
vjud - Basic implementation of XEP-0055: Jabber Search.
watchuntrusted - Similar to mod_watchregistrations, this module warns admins when an s2s connection fails due for encryption or trust reasons.
webpresence - Quite often you may want to publish your Jabber status to your blog or website. mod_webpresence allows you to do exactly this.
